/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mylibrary.booksmanagement;

import java.awt.HeadlessException;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Akshata Pujari
 */
public class LibraryFrame extends javax.swing.JFrame {

    /**
     * Creates new form LibraryFrame
     */
    public LibraryFrame() {
        initComponents();
        SharedBookModel.loadFromDB();
        jTable1.setModel(SharedBookModel.model);
         
    jTable1.revalidate();
    jTable1.repaint();

                             
        setLocationRelativeTo(null);  // Centers the frame on the screen
        pack();  // Auto-sizes the frame to fit components
        jButton1.addActionListener(e -> searchBook());   // Search
        jButton2.addActionListener(e -> borrowBook());   // Borrow
        jButton3.addActionListener(e -> returnBook());   // Return
        jButton4.addActionListener(e -> logout());       // Logout

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Library Section");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(232, 232, 189));
        jLabel1.setFont(new java.awt.Font("Castellar", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("LIBRARY BOOKS");
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 659, 30));

        jTable1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Book ID", "Title", "Author", "Availability (copies left)"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 36, 547, 329));

        jButton1.setText("Search");
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 411, -1, -1));

        jButton2.setText("Borrow");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(193, 411, -1, -1));

        jButton3.setText("Return");
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 411, 65, -1));

        jButton4.setBackground(new java.awt.Color(255, 0, 0));
        jButton4.setText("LogOut");
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(564, 411, 70, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Akshata Pujari\\Desktop\\libraray.jpg")); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 660, 430));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LibraryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LibraryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LibraryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LibraryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new LibraryFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void searchBook() {
        String search = JOptionPane.showInputDialog(this, "Enter Book Title or Author to Search:");
        if (search == null || search.trim().isEmpty()) {
            return;
        }

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        boolean found = false;

        for (int i = 0; i < model.getRowCount(); i++) {
            String title = model.getValueAt(i, 1).toString().toLowerCase();
            String author = model.getValueAt(i, 2).toString().toLowerCase();

            if (title.contains(search.toLowerCase()) || author.contains(search.toLowerCase())) {
                jTable1.setRowSelectionInterval(i, i);
                JOptionPane.showMessageDialog(this, "Book Found: " + model.getValueAt(i, 1));
                found = true;
                break;
            }
        }

        if (!found) {
            JOptionPane.showMessageDialog(this, "No book found with given input!");
        }
    }

   private void borrowBook() {
    int r = jTable1.getSelectedRow();
    if (r == -1) { JOptionPane.showMessageDialog(this, "Select a book to borrow."); return; }
    String id = jTable1.getValueAt(r, 0).toString();
    try {
        if (BookDAO.borrowBook(id)) {
            JOptionPane.showMessageDialog(this, "Borrowed OK");
            SharedBookModel.loadFromDB();
            jTable1.setModel(SharedBookModel.model);
        } else {
            JOptionPane.showMessageDialog(this, "No copies available to borrow.");
        }
  } catch (HeadlessException ex) {

        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
    }
}

private void returnBook() {
    int r = jTable1.getSelectedRow();
    if (r == -1) { JOptionPane.showMessageDialog(this, "Select a book to return."); return; }
    String id = jTable1.getValueAt(r, 0).toString();
    try {
        if (BookDAO.returnBook(id)) {
            JOptionPane.showMessageDialog(this, "Returned OK");
            SharedBookModel.loadFromDB();
            jTable1.setModel(SharedBookModel.model);
        } else {
            JOptionPane.showMessageDialog(this, "Return failed");
        }
    }  catch (HeadlessException ex) {

        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
    }
}

    private void logout() {
        Section sectionPage = new Section();
        sectionPage.setVisible(true);
        this.dispose();
    }
}
